// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_tdd_clean_test/test/features/news/data/repository/article_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_tdd_clean_test/core/network/network_info.dart' as _i5;
import 'package:flutter_tdd_clean_test/features/news/data/data_sources/remote/news_remote_datasource.dart'
    as _i2;
import 'package:flutter_tdd_clean_test/features/news/data/models/article.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [NewsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsRemoteDataSource extends _i1.Mock
    implements _i2.NewsRemoteDataSource {
  MockNewsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ArticleModel>> getArticleModelsFromRemote({
    String? q = r'',
    String? from = r'',
    String? to = r'',
    String? sortBy = r'',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getArticleModelsFromRemote,
          [],
          {
            #q: q,
            #from: from,
            #to: to,
            #sortBy: sortBy,
          },
        ),
        returnValue:
            _i3.Future<List<_i4.ArticleModel>>.value(<_i4.ArticleModel>[]),
      ) as _i3.Future<List<_i4.ArticleModel>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i5.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnectedByConnectivity => (super.noSuchMethod(
        Invocation.getter(#isConnectedByConnectivity),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<bool> get isConnectedByConnectionChecker => (super.noSuchMethod(
        Invocation.getter(#isConnectedByConnectionChecker),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
